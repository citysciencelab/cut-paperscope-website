<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace App\Models\Shop;

	// Laravel
	use Illuminate\Support\Facades\Auth;

	// App
	use App\Models\BaseModel;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CLASS CONSTRUCT
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class Product extends BaseModel {

	// The attributes that are mass assignable.
	protected $childFillable = [

	];

	protected $translateFillable = [
		'title',
		'teaser_description', 'teaser_image',
		'content',
	];

	// properties for model features
	public static $useSlug = true;
	public static $usePublished = true;
	public static $useSearch = true;

	// cast properties to correct type
	protected $casts = ['stripe_synced' => 'boolean'];


	public function __construct(array $attributes = []) {

		parent::__construct($attributes);

		$this->mergeFillable($this->childFillable, $this->translateFillable);
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	RELATIONS
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	// relation for child models. Directly attached to parent model (InputChildModel)
	public function fragments() {

		return $this->getChildRelation('App\Models\App\Base\Fragment');
	}


	public function deleteRelations() {

		$this->fragments()->delete();
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


} // end class
