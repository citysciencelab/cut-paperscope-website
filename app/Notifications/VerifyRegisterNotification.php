<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace App\Notifications;

	// Laravel
	use Illuminate\Bus\Queueable;
	use Illuminate\Contracts\Queue\ShouldQueue;
	use Illuminate\Notifications\Messages\MailMessage;
	use Illuminate\Auth\Notifications\VerifyEmail;
	use Illuminate\Support\Carbon;
	use Illuminate\Support\Facades\URL;
	use Illuminate\Support\Facades\Config;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CLASS DECLARATION
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class VerifyRegisterNotification extends VerifyEmail implements ShouldQueue
{
	// Traits
	use Queueable;

	public $locale;

	public function __construct($locale) {

		$this->locale = $locale;
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	VERIFICATION LINK
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	protected function verificationUrl($notifiable) {

		return URL::temporarySignedRoute(
			'verification.verify',
			Carbon::now()->addMinutes(Config::get('auth.verification.expire', 60)),
			[
				'id' => $notifiable->getKey(),
				'hash' => sha1($notifiable->getEmailForVerification()),
				'lang' => $this->locale,
			]
		);
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	NOTIFICATION
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	public function via($notifiable) {

		return ['mail'];
	}


	public function toMail($notifiable) {

		app()->setLocale($this->locale);

		$verificationUrl = $this->verificationUrl($notifiable);

		return ( new MailMessage )
			->greeting(__('notification.greeting') . ' ' . $notifiable->name)
			->subject(__('notification.verify-subject'))
			->line(__('notification.verify-text'))
			->action(__('notification.verify-button'), $verificationUrl)
			->line(__('notification.verify-wrong'))
			->salutation(__('notification.salutation'));
	}



/*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


}
