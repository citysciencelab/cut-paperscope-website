<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// 	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace App\Http\Requests\App;

	use Illuminate\Contracts\Validation\Validator;
	use Illuminate\Support\Facades\Log;


	// App
	use App\Http\Requests\Model\BaseModelSaveRequest;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// 	CLASS CONSTRUCT
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class ProjectSceneSaveRequest extends BaseModelSaveRequest {


	protected $target = "projects";
	protected $targetClass = \App\Models\App\Project::class;


	public function authorize(): bool {

		return true;
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	VALIDATE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	public function rules(): array {

		return [
			'slug' => 'bail|required|string|max:9',
			'scene' => 'bail|nullable|array',
			'scene.*.uid' => 'bail|required|string',
			'scene.*.shape' => 'bail|required|int',
			'scene.*.color' => 'bail|required|int',
			'scene.*.points' => 'bail|nullable|array',
			'scene.*.points.*.x' => 'bail|nullable|numeric',
			'scene.*.points.*.y' => 'bail|nullable|numeric',
		];
	}

	protected function failedValidation(Validator $validator)
    {
        Log::info('Validation failed for ' . $this->target . ' with errors: ' . json_encode($validator->errors()->toArray()));
		parent::failedValidation($validator);
    }



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	ERROR MESSAGES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	// rename variables for form error messages
	public function attributes(): array {

		return [
			...parent::attributes(),
			//'start' => 	trans('Startdatum'),
		];
	}


	public function messages(): array {

		return [
			...parent::messages(),
		];
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


} // end class
