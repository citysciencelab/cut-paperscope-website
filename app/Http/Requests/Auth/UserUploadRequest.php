<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace App\Http\Requests\Auth;

	// Laravel
	use Illuminate\Support\Facades\Auth;

	// App
	use App\Http\Requests\BaseFormRequest;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CLASS
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class UserUploadRequest extends BaseFormRequest {

	private string $mimeTypes = '';
	private string $maxSize = '8192';


	public function authorize(): bool {

		$user = Auth::user();
		return $user && !$user->isGuest();
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	VALIDATE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	protected function prepareForValidation(): void {

		// set mime types per type
		switch($this->file_type) {
			case 'image': $this->mimeTypes = 'jpeg,jpg,png,gif,webp,svg'; break;
			case 'video': $this->mimeTypes = 'mp4'; break;
			case 'audio': $this->mimeTypes = 'mp3'; break;
			case 'media': $this->mimeTypes = 'jpeg,jpg,png,gif,webp,svg,mp4,mp3'; break;
			case '3d': $this->mimeTypes = 'bin,gltf,glb'; break;
			case 'doc': $this->mimeTypes = 'pdf,vtt,doc,docx,zip'; break;
		}

		if($this->file_type == '3d') { $this->maxSize = '102400'; }
	}


	public function rules(): array {

		return [

			'stream_offset' => 	'bail|required|in:78fb153f02e9d3a43b4e5a81273ed716=', // hidden id for validation
			'id' => 	 		'bail|required|uuid|exists:users',
			'file_type' => 		'bail|required|in:image,video,audio,media,3d,doc',
			'file' => 			'bail|required|file|mimes:'.$this->mimeTypes.'|max:'.$this->maxSize,
			'folder' => 		$this->rule('folder'),
		];
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


} // end class
