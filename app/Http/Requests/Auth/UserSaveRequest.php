<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace App\Http\Requests\Auth;

	// Laravel
	use Illuminate\Support\Facades\Auth;

	// App
	use App\Http\Requests\Model\BaseModelSaveRequest;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CLASS
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class UserSaveRequest extends BaseModelSaveRequest {


	protected $target = "users";
	protected $targetClass = \App\Models\Auth\User::class;


	public function authorize(): bool {

		$user = Auth::user();
		return $user && $user->hasPermissionTo('edit users');
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	VALIDATE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	protected function prepareForValidation(): void	{

		$this->merge([
			'email' => strtolower($this->email),
			'username' => strtolower($this->username),
		]);
	}


	public function rules(): array {

		return [

			'id' => 				'sometimes|uuid|exists:users',
			'name' =>				'bail|required|string|max:50',
			'surname' => 			'bail|required|string|max:50',

			'email' => 				$this->rule('email',true).'|unique:users,email,'.$this->id,
			'username' => 			array_merge($this->rule('username'), ['unique:users,username,'.$this->id]),

			'street' => 			'bail|nullable|string|max:50',
			'street_number' => 		'bail|nullable|string|max:10',
			'zipcode' => 			'bail|nullable|string|max:10',
			'city' => 				'bail|nullable|string|max:50',
			'country' => 			'bail|nullable|string|alpha:ascii|max:3',
			'birthday' => 			'bail|nullable|string|date_format:j.n.Y|before:-18 years',

			'gender' =>				'bail|required|string|in:m,f,d,u',
			'password' => 			'bail|required_without:id|confirmed|min:8',
			'role' => 				'bail|required_without:id|exists:roles,name',
			'sso_driver' => 		'bail|nullable|string|in:google,facebook,apple',
			'free_subscription' => 	'bail|nullable|boolean',

			'approved' => 			'bail|nullable|boolean',
			'blocked' => 			'bail|nullable|boolean',
		];
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	ERROR MESSAGES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	// rename variables for form error messages
	public function attributes(): array {

		return [
			...parent::attributes(),
			'role' => 	trans('Benutzerrolle'),
		];
	}


	public function messages(): array {

		return [
			...parent::messages(),
		];
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


} // end class
