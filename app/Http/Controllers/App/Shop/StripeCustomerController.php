<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace App\Http\Controllers\App\Shop;

	// Laravel
	use App\Http\Controllers\Controller;
	use Illuminate\Http\JsonResponse;
	use Laravel\Cashier\Events\WebhookReceived;
	use Laravel\Cashier\Cashier;

	// App
	use App\Http\Resources\Auth\UserResource;

	// App Models
	use App\Models\Auth\User;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CLASS CONSTRUCT
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class StripeCustomerController extends Controller {

	// model classes
	protected $modelClass = User::class;
	protected $modelResourceClass = UserResource::class;
	protected $modelListResourceClass = UserResource::class;

	// model relations
	protected $modelRelations = [];
	protected $modelListRelations = [];



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	UPDATE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	public function onCustomerUpdated(WebhookReceived $event): JsonResponse {

		// get user
		$stripeCustomerId = $event->payload['data']['object']['id'];
		$user = Cashier::findBillable($stripeCustomerId);
		if(!$user) { return response()->json(['message' => 'User not found'], 200); }

		// TODO: update user

		return response()->json(['message' => 'User updated'], 200);
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	DELETED
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	public function onCustomerDeleted(WebhookReceived $event): JsonResponse {

		// get user
		$stripeCustomerId = $event->payload['data']['object']['id'];
		$user = Cashier::findBillable($stripeCustomerId);
		if(!$user) { return response()->json(['message' => 'User not found'], 200); }

		// remove customer
		$user->stripe_id = null;
		$user->save();

		return response()->json(['message' => 'Customer deleted'], 200);
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


} // end class
