<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace App\Http\Controllers\Backend\Base;

	// Laravel
	use App\Http\Controllers\Backend\BackendController;
	use Illuminate\Http\JsonResponse;

	// App
	use App\Models\App\Base\Item;
	use App\Http\Resources\Base\ItemResource;
	use App\Http\Resources\Base\ItemListResource;
	use App\Http\Requests\Backend\Base\ItemSaveRequest;
	use App\Jobs\Base\ProcessItemUpload;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CLASS CONSTRUCT
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class ItemController extends BackendController {

	// model classes
	protected $modelClass = Item::class;
	protected $modelResourceClass = ItemResource::class;
	protected $modelListResourceClass = ItemListResource::class;

	// model relations
	protected $modelRelations = ['pages','fragments'];
	protected $modelListRelations = [];

	// return model list with pagination
	protected $paginator = true;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	SAVE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	public function save(ItemSaveRequest $request): JsonResponse {

		$validated = $request->validated();

		$item = $this->saveBaseModel($request);

		// save item properties
		$item->title 		= $validated->title;
		$item->richtext		= $validated->richtext;
		$item->file 		= $validated->file;
		$item->save();

		// add jobs to queue
		if(!$validated->preview) {
			ProcessItemUpload::dispatch($item);
		}

		return $this->getBackend($item->id);
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


} // end class
