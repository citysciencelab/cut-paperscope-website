<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace Tests\PHPUnit\Feature\Notifications;

	// Laravel
	use Tests\PHPUnit\TestCase;
	use Illuminate\Foundation\Testing\RefreshDatabase;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    CLASS DECLARATION
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class PasswordResetNotificationTest extends TestCase {

	use RefreshDatabase;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	MAIL
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	public function test_notification_mail() {

		// arrange
		$user = $this->createUser();

		// act
		$notification = new \App\Notifications\PasswordResetNotification('token-123', 'de');
		$mailMessage = $notification->toMail($user);

		// assert_ notification driver
		$this->assertEquals(['mail'], $notification->via($user));

		// assert: mail message
		$url = 'password/reset?token=token-123&email='.$user->email;
		$this->assertEquals('Anfrage Passwort zurÃ¼cksetzen', $mailMessage->subject);
		$this->assertEquals('Hallo '.$user->name, $mailMessage->greeting);
		$this->assertStringContainsString($url, $mailMessage->actionUrl);
	}


	public function test_notification_to_sso_user() {

		// arrange
		$user = $this->createUser(['sso_driver' => 'google']);

		// act
		$notification = new \App\Notifications\PasswordResetNotification('token-123', 'de');
		$mailMessage = $notification->toMail($user);

		// assert: mail message
		$this->assertStringContainsString('Google', $mailMessage->introLines[1]);
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


} // end class

