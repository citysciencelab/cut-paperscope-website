<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace Tests\PHPUnit\Feature\Notifications;

	// Laravel
	use Tests\PHPUnit\TestCase;
	use Illuminate\Foundation\Testing\RefreshDatabase;
	use Illuminate\Support\Facades\Config;
	use Illuminate\Support\Carbon;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    CLASS DECLARATION
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class VerifyRegisterNotificationTest extends TestCase {

	use RefreshDatabase;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	MAIL
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	public function test_notification_mail() {

		// arrange
		$user = $this->createUser();

		// act
		$notification = new \App\Notifications\VerifyRegisterNotification('de');
		$mailMessage = $notification->toMail($user);

		// assert: notification driver
		$this->assertEquals(['mail'], $notification->via($user));

		// assert: mail message
		$this->assertEquals('E-Mail-Adresse bestÃ¤tigen', $mailMessage->subject);
		$this->assertEquals('Hallo '.$user->name, $mailMessage->greeting);
		$this->assertStringContainsString('auth/email/verify/', $mailMessage->actionUrl);
	}


	public function test_verification_url() {

		// arrange
		$user = $this->createUser();

		// act
		$notification = new \App\Notifications\VerifyRegisterNotification('de');
		$mailMessage = $notification->toMail($user);

		// assert: url params from action url
		parse_str(parse_url($mailMessage->actionUrl)['query'], $params);
		$this->assertEquals($params['lang'], 'de');
		$this->assertEquals($params['expires'], Carbon::now()->addMinutes(Config::get('auth.verification.expire', 60))->timestamp);
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


} // end class

