<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace Tests\PHPUnit\Feature\Http\Requests\Backend;

	// Laravel
	use Tests\PHPUnit\TestCase;
	use Illuminate\Foundation\Testing\RefreshDatabase;
	use Illuminate\Support\Facades\Bus;

	// App
	use App\Jobs\ProcessProjectUpload;
	use App\Jobs\Base\ProcessSharingUpload;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    CLASS DECLARATION
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class ProjectSaveRequestTest extends TestCase {

	use RefreshDatabase;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    SAVE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	public function test_save_project() {

		// arrange
		Bus::fake();
		$this->loginAsEditor();

		// arrange: form data
		$formData = $this->getBaseFormData();
		$formData['title'] = 'test title';
		$formData[$this->translateProp('description')] = '<p>test description</p>';

		// act
		$project = $this->postData('/api/backend/project/save', $formData, $this->getBackendHeaders());

		// assert
		$this->assertEquals('project',$project['type']);
		$this->assertArraySubset($formData, $project);

		// assert: jobs
		Bus::assertDispatched(ProcessProjectUpload::class);
		Bus::assertDispatched(ProcessSharingUpload::class);
	}


	private function getBaseFormData() {

		return [
			'name' => 'test name',
			'slug' => 'test-slug',
			'public' => true,
			'order' => 0,
		];
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

} // end class

