<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace Tests\PHPUnit\Feature\Http\Middleware;

	// Laravel
	use Tests\PHPUnit\TestCase;
	use Illuminate\Http\Request;
	use Illuminate\Http\Response;

	// App
	use App\Http\Middleware\SetUserLanguage;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    CLASS DECLARATION
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class SetUserLanguageTest extends TestCase {



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    TEST
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	public function test_force_locale_with_url() {

		// arrange
		$request = Request::create('http://localhost/en/test', 'GET');
		$request->setRouteResolver(function () use ($request) {
			$route = new \Illuminate\Routing\Route('GET', 'test', []);
			return $route->name('index.vue')->bind($request);
		});
		$request->headers->set('accept-language', 'de-de,de;q=0.5');
		$this->assertNotEquals('en', \Session::get('locale'));

		// act
		$middlware = new SetUserLanguage();
		$middlware->handle($request, function ($request) { return new Response(); });

		// assert
		$this->assertEquals('en', \Session::get('locale'));
	}


	public function test_fallback_to_default_on_wrong_locale() {

		// arrange
		$request = Request::create('http://localhost/xx/test', 'GET');
		$request->setRouteResolver(function () use ($request) {
			$route = new \Illuminate\Routing\Route('GET', 'test', []);
			return $route->name('index.vue')->bind($request);
		});
		$request->headers->set('accept-language', 'xx-xx,xx;q=0.5');
		$this->assertNotEquals('xx', \Session::get('locale'));

		// act
		$middlware = new SetUserLanguage();
		$middlware->handle($request, function ($request) { return new Response(); });

		// assert
		$this->assertEquals(config('app.fallback_locale'), \Session::get('locale'));
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

} // end class

