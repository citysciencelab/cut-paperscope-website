<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace Tests\PHPUnit\Feature\Http\Resources\Shop;

	// Laravel
	use Tests\PHPUnit\TestCase;
	use Illuminate\Foundation\Testing\RefreshDatabase;
	use Illuminate\Http\Request;

	// App
	use App\Http\Resources\Shop\StripeSubscriptionResource;
	use Stripe\Subscription as StripeSubscription;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    CLASS DECLARATION
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class StripeSubscriptionResourceTest extends TestCase {

	use RefreshDatabase;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    INPUT FILE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	public function test_stripe_subscription_resource() {

		// arrange
		$subscription = new StripeSubscription();
		$subscription->type = 'default';
		$subscription->plan = (object) ['amount' => 1000, 'currency' => 'eur'];
		$subscription->invoices = [];

		// act
		$resource = new StripeSubscriptionResource($subscription);
		$result = $resource->toArray(new Request());

		// assert
		$this->assertEquals($result['type'],'stripe_subscription');
		$this->assertEquals($result['name'],'default');
		$this->assertEquals($result['price'],'10,00 EUR');
	}


	public function test_free_stripe_subscription_resource() {

		// arrange
		$subscription = new StripeSubscription();
		$subscription->type = 'free';
		$subscription->plan = (object) ['amount' => 0, 'currency' => 'eur'];
		$subscription->invoices = [];

		// act
		$resource = new StripeSubscriptionResource($subscription);
		$result = $resource->toArray(new Request());

		// assert
		$this->assertEquals($result['type'],'stripe_subscription');
		$this->assertEquals($result['name'],'free');
		$this->assertEquals($result['price'],'Free');
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

} // end class

