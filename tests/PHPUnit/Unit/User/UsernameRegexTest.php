<?php

/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace Tests\PHPUnit\Unit\User;

	// Laravel
	use Tests\PHPUnit\TestCase;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    CLASS DECLARATION
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class UsernameRegexTest extends TestCase {



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    FRONTEND ROUTES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	/** @dataProvider provideUsernameData */
	public function test_username_regex(string $username, bool $isValid) {

		$regex = '/^[a-z0-9]([._-](?![._-])|[a-z0-9]){1,28}[a-z0-9]$/';

		$this->assertEquals($isValid, preg_match($regex, $username) === 1);
	}


	static public function provideUsernameData() {

		return [
			"valid username" => [ 'adam', true ],
			"valid username minlength" => [ 'ada', true ],
			"valid username with numbers" => [ 'adam123', true ],
			"valid username with underscore" => [ 'adam_123', true ],
			"valid username with dash" => [ 'adam-123', true ],
			"valid username with dot" => [ 'adam.123', true ],
			"valid username with dot and underscore" => [ 'adam.yauch_123', true ],
			"valid username with dot and dash" => [ 'adam.yauch-123', true ],
			"valid username with underscore and dash" => [ 'adam_yauch-123', true ],
			"valid username with maxlength of 30" => [ 'adamadamadamadamadamadamadamad', true ],

			"invalid username with special character" => [ 'adam!', false ],
			"invalid username with special character" => [ 'adam@', false ],
			"invalid username too short" => [ 'ad', false ],
			"invalid username too long" => [ 'adamadamadamadamadamadamadamada', false ],
		];
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */

} // end class
