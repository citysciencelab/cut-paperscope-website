/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	// vue
	import { mount } from '@vue/test-utils';
	import { createRouter, createMemoryHistory } from 'vue-router'
	import { config } from '@vue/test-utils'

	// test component
	import PageTransition from '@global/pages/PageTransition.vue';
	import BlankComponent from '@tests/Vitest/Helper/BlankComponent.vue';



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	ROUTER
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	const routes = [
		{ path: '/', name: 'index', component: BlankComponent },
		{ path: '/default', name: 'default', component: BlankComponent },
	];


	const router = createRouter({
		history: createMemoryHistory(),
		routes,
	});



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	ROUTER TRANSITION
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	test('renders component with router transition', async () => {

		// arrange: remove stubbed router-link
		delete config.global.components.RouterLink;

		// arrange: init router
		router.push({ name: 'index' });
		await router.isReady();

		// arrange component
		const wrapper = mount(PageTransition, {
			slots: { default: BlankComponent },
			global: {
				plugins: [router],
			}
		});
		expect(wrapper.attributes('id')).toBe('page-index');

		// act
		await router.push({ name: 'default' });

		// assert
		expect(wrapper.attributes('id')).toBe('page-default');
	});



/*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


