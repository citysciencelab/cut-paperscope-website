<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace PHP_CodeSniffer\Standards\HelloNasty\Sniffs\Comments;


	use PHP_CodeSniffer\Sniffs\Sniff;
	use PHP_CodeSniffer\Files\File;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CLASS DECLARATION
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class FunctionOpeningBracketSniff implements Sniff
{

	public function register() {

		return array(T_FUNCTION);
	}


	public function process(File $file, $stackPtr) {

		$tokens = $file->getTokens();
		$token = $tokens[$stackPtr];

		// find opening bracket
		$nextPtr = $file->findNext(T_OPEN_CURLY_BRACKET, $stackPtr, null, false);
		$nextToken = $tokens[$nextPtr];

		// check if opening bracket is on the same line
		if($nextToken['line'] != $token['line']) {
			$file->addError('Opening bracket must be on the same line as function declaration', $stackPtr, 'Function_OpeningBracket');
		}
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


}	// end class


