#!/usr/bin/env node

/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	const fs = require('fs-extra');
	const Helper 	= require('../helper.js');

	var XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;

	const result = require('dotenv').config({ path: __dirname + '/.env' });
	if (result.error) { throw result.error; }



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CONFIG
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	var exportFolder 	= __dirname + '/' + process.env.EXPORT_FOLDER;
	var rootFolder 		= __dirname + '/../../';


	var staticDomain 	= (new URL(process.env.STATIC_URL)).hostname;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	MAIN
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	prepareExportFolder();
	copyStaticAssets();
	exportCss();
	exportJavascript();
	exportHtml();



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	EXPORT
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	function prepareExportFolder() {

		fs.ensureDirSync(exportFolder, {errorOnExist:false});
		console.log('export to: ' + exportFolder);
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	STATIC ASSETS
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	function copyStaticAssets() {

		// static files relative to project root
		var staticFiles = [

			// Favicons
			'public/android-chrome-192x192.png',
			'public/android-chrome-256x256.png',
			'public/android-chrome-512x512.png',
			'public/apple-touch-icon.png',
			'public/browserconfig.xml',
			'public/favicon-16x16.png',
			'public/favicon-32x32.png',
			'public/favicon.ico',
			'public/mstile-150x150.png',
			'public/safari-pinned-tab.svg',
			'public/site.webmanifest',
			'public/web.config',

			// Meta files
			'public/robots.txt',

			// Fonts
			'public/fonts/opensans',

			// Files
			'public/img',
			'public/svg',
			//'public/video',
		];

		// copy files to export folder
		var opt = {errorOnExist:false};
		staticFiles.forEach(file => fs.copySync(rootFolder+file, exportFolder + file.replace('public/',''),opt) );
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CSS / JAVASCRIPT
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	function exportCss() {

		var opt = {errorOnExist:false};
		fs.copySync(rootFolder + 'public/css', exportFolder + 'css', opt);
	}


	function exportJavascript() {

		var opt = {errorOnExist:false};
		fs.copySync(rootFolder + 'public/js', exportFolder + 'js', opt);

		// overwrite urls and paths
		//var file = fs.readFileSync(exportFolder+'js/app.js',opt);
		//file  = replaceUrlAndPath(file);
		//fs.outputFile(exportFolder+'js/app.js', file, onError);
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	HTML
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	function exportHtml() {

		var pages = [
			{
				path: '',
				id: 'index',
			},
		];
		pages.forEach(createHtmlPage);
	}


	function createHtmlPage(page) {

		var url 	= process.env.ROOT_URL;
		var path 	= Helper.validatePath(page.path);

		// get html page from localhost
		var request = new XMLHttpRequest();
		request.open('GET', url + path.slice(0, -1), true);  // `false` makes the request synchronous
		request.onload = (e) =>{
			if(request.readyState == 4 && request.status == 200) { onHtmlRequestResponse(page,request.responseText); }
		};
		request.send(null);
	}


	function onHtmlRequestResponse(page,response) {

		var path 		= Helper.validatePath(page.path);
		var pageData 	= response;

		// prepare html doc
		pageData = removeCsrfToken(pageData);
		pageData = modifyCookies(pageData);
		pageData = removeLivereload(pageData);
		pageData = replaceUrlAndPath(pageData);

		// save page
		fs.outputFile(exportFolder+path+'index.html', pageData, onError);
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	HTML HELPER
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	function replaceUrlAndPath(target) {

		target = target.replaceAll(process.env.ROOT_URL, process.env.STATIC_URL);
		target = target.replaceAll(process.env.ROOT_PATH, process.env.STATIC_PATH);
		return target;
	}


	function removeCsrfToken(data) {

		return data.replace(/^\s+<meta name="csrf-token".*$/gm,'');
	}


	function modifyCookies(data) {

		return data.replace(/"cookie_domain": ".*"/gm, '"cookie_domain": "'+staticDomain+'"');
	}


	function removeLivereload(data) {

		return data.replace(/^\s+<script src="http:\/\/localhost:35.*$/gm,'');
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	HELPER
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	function onError(err) {

		if(err) { console.log(err);	}
	}
