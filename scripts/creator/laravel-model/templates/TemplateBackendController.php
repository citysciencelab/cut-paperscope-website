<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	namespace App\Http\Controllers\Backend;

	// Laravel
	use App\Http\Controllers\Backend\BackendController;
	use Illuminate\Http\JsonResponse;

	// App
	use App\Models\App\{{ModelClass}};
	use App\Http\Resources\{{ModelClass}}Resource;
	use App\Http\Resources\{{ModelClass}}ListResource;
	use App\Http\Requests\Backend\{{ModelClass}}SaveRequest;
	{{sharingjob_include}}
	use App\Jobs\Process{{ModelClass}}Upload;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CLASS CONSTRUCT
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


class {{ModelClass}}Controller extends BackendController {

	// model classes
	protected $modelClass = {{ModelClass}}::class;
	protected $modelResourceClass = {{ModelClass}}Resource::class;
	protected $modelListResourceClass = {{ModelClass}}ListResource::class;

	// model relations
	protected $modelRelations = [{{relationsList}}];
	protected $modelListRelations = [];

	// return model list with pagination
	protected $paginator = true;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	SAVE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	public function save({{ModelClass}}SaveRequest $request): JsonResponse {

		$validated = $request->validated();

		${{slug}} = $this->saveBaseModel($request);

		// save {{slug}} properties
		{{attributes}}
		{{translatables}}
		{{relations}}
		${{slug}}->save();

		// add jobs to queue
		if(!$validated->preview) {
			{{sharingjob_process}}
			Process{{ModelClass}}Upload::dispatch(${{slug}});
		}

		return $this->getBackend(${{slug}}->id);
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


} // end class
