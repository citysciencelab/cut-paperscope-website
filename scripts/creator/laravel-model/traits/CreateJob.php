<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	// laravel
	require_once __DIR__ . '/../../../../vendor/autoload.php';
	use Illuminate\Support\Str;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    MAIN
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


trait CreateJob {



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    JOB
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	protected function createJob() {


		$this->fillTemplate('ProcessTemplateUpload.php', 'app/Jobs/Process'.$this->userInput['name'].'Upload.php', function($template) {

			$this->replaceLine($template, '{{attributes}}', $this->createJobAttributes());

			return $template;
		});
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    ATTRIBUTES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	protected function createJobAttributes() {

		$attributes = "";
		$translatables = "";

		foreach($this->userInput['attributes'] as $a) {

			$output = '';
			$name = $a['name'];
			$translatable = $a['translatable'];
			$tabs = $translatable?"\n\t\t\t":"\n\t\t";

			if($a['type'] == 'file') {
				$output = "\$this->moveFileFromUpload('".$name."'".($translatable?'.$lang':'').");";
			}
			else if($a['type'] == 'image') {
				$output = '$w = 1600; $h = 900;'.$tabs;
				$output .= "\$this->convertJpeg('".$name."'".($translatable?'.$lang':'').", \$w*0.25, \$h*0.25, '".$name.($translatable?"'.\$lang.'":'')."-mobile-lr', false, 20, 0);".$tabs;
				$output .= "\$this->convertJpeg('".$name."'".($translatable?'.$lang':'').", \$w*0.5, \$h*0.5, '".$name.($translatable?"'.\$lang.'":'')."-desktop-lr', false, 40, 0);".$tabs;
				$output .= "\$this->convertJpeg('".$name."'".($translatable?'.$lang':'').", \$w*0.5, \$h*0.5, '".$name.($translatable?"'.\$lang.'":'')."-mobile-hr', false);".$tabs;
				$output .= "\$this->convertJpeg('".$name."'".($translatable?'.$lang':'').", \$w, \$h, '".$name.($translatable?"'.\$lang.'":'')."-desktop-hr', true);\n";
			}

			if($output && $translatable) { $translatables .= $output.$tabs; }
			else if($output) { $attributes .= ($output.$tabs); }
		}

		if($translatables != '') {
			$translatables = Str::replaceLast($tabs,'',$translatables);
			$attributes .= "\n\t\tforeach(\$this->langKeys as \$lang) {\n\n\t\t\t".$translatables."\n\t\t}";
		}
		else {
			$attributes = Str::replaceLast("\n\t\t",'',$attributes);
		}

		return $attributes;
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


} // end trait
