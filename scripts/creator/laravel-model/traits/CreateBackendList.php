<?php
/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	// laravel
	require_once __DIR__ . '/../../../../vendor/autoload.php';
	use Illuminate\Support\Str;



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    MAIN
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


trait CreateBackendList {



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    BACKEND NAVI
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	protected function createBackendList() {

		if($this->userInput['target'] == 'fragment') { return; }

		$this->fillTemplate('PageTemplateList.vue', 'resources/js/backend/pages/'.$this->userInput['slug'].'/Page'.$this->userInput['name'].'List.vue', function($template) {

			$this->setBackendListTarget($template);
			$this->replace($template, '{{attributes}}', $this->createBackendListAttributes());

			return $template;
		});
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    TARGET
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	protected function setBackendListTarget(string &$template) {

		if($this->userInput['target'] == 'page') {
			$this->replace($template, '//preview','preview');
			$this->replace($template, '//sort','sort');
			$this->replaceLine($template, 'range: 10,','');
		}
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//    ATTRIBUTES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	protected function createBackendListAttributes() {

		$attributes = '';

		if($this->userInput['target'] == 'item') {

			$attributes .= "{label: 'Slug', property: 'slug', type: 'string'},\n\t\t\t";
			$attributes .= "{label: 'Public', property: 'public', type: 'bool'},\n\t\t\t";
		}
		else if($this->userInput['target'] == 'page') {

			$attributes .= "{label: 'Slug', property: 'slug', type: 'string'},\n\t\t\t";
			$attributes .= "{label: 'Start', property: 'published_start', type: 'string'},\n\t\t\t";
			$attributes .= "{label: 'Ende', property: 'published_end', type: 'string'},\n\t\t\t";
		}

		return Str::replaceLast("\n\t\t\t", '', $attributes);
	}


/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


} // end trait
