/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	// vue
	import { ref } from "vue";

	// app
	import '@global/composables/types';



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	COMPOSABLE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


export const useLazyload = () => {

	/**
	 * Update global lazyload listener. Can be called multiple times without performance issues.
	 */

	function updateLazyload() {

		clearTimeout(window.lazyloadTimer);
		window.lazyloadTimer = setTimeout(() => window.lazyload?.update(), 150);
	};


	/**
	 * Reset lazyloaded stat on element to force new lazyload.
	*/

	function resetLazyload(element: any) {

		window.u(element).removeClass("entered loaded");
		window.u(element).attr('data-ll-status', null);

		updateLazyload();
	};


	/////////////////////////////////
	// EXPORT
	/////////////////////////////////

	return {
		updateLazyload, resetLazyload
	};



/*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */



};
