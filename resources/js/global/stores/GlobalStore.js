/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	import { computed, ref } from 'vue'
	import { defineStore } from 'pinia'



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	STORE
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	export const useGlobalStore = defineStore('global', () => {

		/////////////////////////////////
		// VIEWPORT
		/////////////////////////////////

		const vw = ref(9999);
		const vh = ref(9999);

		function setViewport(newVw, newVh) {

			vw.value = newVw;
			vh.value = newVh;
		}


		/////////////////////////////////
		// ERROR
		/////////////////////////////////

		const error = ref(null);

		function setError(newError) {

			error.value = newError;
		}


		/////////////////////////////////
		// API CACHE
		/////////////////////////////////

		const apiCache = ref({});

		function setApiCache(key, value) {

			apiCache.value[key] = {
				value: value,
				timestamp: Date.now(),
			};
		}


		/////////////////////////////////
		// LIGHTBOX
		/////////////////////////////////

		const showLightbox = ref(false);

		function setLightbox(show) {

			showLightbox.value = show;
		}


		/////////////////////////////////
		// COOKIE CONSENT
		/////////////////////////////////

		const cookieConsent = ref({});

		const usedCookieConsent = computed(() => {

			for (let key in cookieConsent.value) {
				if (cookieConsent.value[key] !== undefined) return true;
			}

			return false;
		});

		function setCookieConsent(consent) {

			cookieConsent.value = consent;
		}


		return {
			vw, vh, setViewport,
			error, setError,
			apiCache, setApiCache,
			showLightbox, setLightbox,
			cookieConsent, usedCookieConsent, setCookieConsent,
		};
	})
